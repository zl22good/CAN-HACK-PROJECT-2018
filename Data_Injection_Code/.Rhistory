trimmedData = mydata[1:12]
mydata = read.csv("data_embedded.csv",header = TRUE)  # read csv file
trimmedData = mydata[1:12]
trimmedData = mydata[1:12]
###############################
#Above is test/learning code
#The following code in the "inject" malicious code in
#to our data
#This malicious code edits the bytes and then changes
#data_type to a 0 for false, as in malicious
################################
trimmedDataModified = read.csv("trimmedData.csv",header = TRUE)
q()
#############################
#The below code breakes up our gaint data set of over
#600k data points down to more usable data sets
#It breaks the code down to about 80% training and
#20% test data
############################
i=0
library(csv)
trimmedData = read.csv("trimmedData.csv",header = TRUE)
#############################
#The below code breakes up our gaint data set of over
#600k data points down to more usable data sets
#It breaks the code down to about 80% training and
#20% test data
############################
i=0
1+1
lower = i*dataPoints
lower = i*dataPoints
upper = (i+1)*dataPoints
y = trimmedData[lower:upper,]
write.csv(y,x, row.names=FALSE)
write.csv(y,x, row.names=FALSE)
lower = i*dataPoints
setwd("C:/Users/Zacgo/OneDrive/Desktop/CAN-HACK-PROJECT-2018/Data_Injection_Code")
setwd("C:/Users/Zacgo/OneDrive/Desktop/CAN-HACK-PROJECT-2018/Data_Injection_Code")
#head(mydata)
#trimmedData = mydata[c(1,4:11)]
#head(trimmedData)
#library(UsingR)
#library(corrplot)
#corrplot(trimmedData)
#plot(trimmedData)
#cor(trimmedData)
#corrplot(trimmedData, type="upper", order="hclust")
#write.csv(trimmedData,'trimmedData.csv')
library(csv)
source('C:/Users/Zacgo/OneDrive/Desktop/CAN-HACK-PROJECT-2018/Data_Injection_Code/CAN_Injection.R')
